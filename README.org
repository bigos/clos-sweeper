* clos-sweeper

[[file:screenshot-won.png]]

A toy mine sweeper written in Common Lisp

**  License

Public Domain

** Libraries

https://github.com/bohonghuang/cl-gtk4

https://lispcookbook.github.io/cl-cookbook/clos.html

** Setup

Make sure SBCL is installed

Make sure you have quicklisp and ultralisp installed.

https://www.quicklisp.org/beta/

https://ultralisp.org/

Make sure you have gtk4 libraries installed.

*** Linux
On Ubuntu like Linux you run: sudo apt install libgtk-4-dev

*** Windows
First I installed Emacs from using the installer from
https://www.gnu.org/software/emacs/download.html#nonfree

Then I installed MSYS2
https://www.msys2.org/

On Windows 11 with MSYS2 run MINGW64 terminal and execute:
#+begin_example
  pacman -S mingw-w64-x86_64-gcc mingw-w64-x86_64-gtk4 mingw-w64-x86_64-cairo mingw-w64-x86_64-gobject-introspection
#+end_example

*** Cmd files
I have a *.cmd c=script that starts Emacs with correct environment setting

#+begin_example
set PATH=c:/msys64/mingw64/bin;c:/msys64/usr/bin;%PATH%
set PKG_CONFIG_PATH=c:/msys64/mingw64/lib/pkgconfig

C:\"Program Files"\Emacs\emacs-29.1\bin\runemacs.exe
#+end_example

Also I have powershell_launcher.cmd that starts Windows powershell and allows me
to run the tests from the shell

Trying to comment out the paths did not work. I have tried those values set up in the
paths setting for my Windows account, yet I need the scripts to launch Emacs or
powershell and successfully load, test and run game. Why, why why?

#+begin_example
set PATH=c:/msys64/mingw64/bin;c:/msys64/usr/bin;%PATH%
set PKG_CONFIG_PATH=c:/msys64/mingw64/lib/pkgconfig

powershell
#+end_example

** Running

*** Terminal
Use the ~cd~ command to go to the root of the project and run:
#+begin_example
sbcl --load ./launch.lisp
#+end_example

*** Windows REPL
#+begin_example
(push #p"c:/Users/jacek/Programming/Lisp/clos-sweeper/" asdf:*central-registry*)
(ql:quickload :clos-sweeper)
(clos-sweeper::main)
#+end_example

*** Linux REPL
#+begin_example
(push #p"~/Programming/Lisp/clos-sweeper/" asdf:*central-registry*)
(ql:quickload :clos-sweeper)
(clos-sweeper::main)
#+end_example

** Testing

*** in the terminal
#+begin_example
sbcl --load  ~/Programming/Lisp/clos-sweeper/testing.lisp
#+end_example

*** in the REPL
#+begin_src lisp
  (push #p"~/Programming/Lisp/clos-sweeper/" asdf:*central-registry*)
  (ql:quickload :clos-sweeper/tests)
  (asdf:test-system :clos-sweeper/tests)
#+end_src

Some tests may write a snapshot of the canvas. It goes to /tmp/ on Linux
and on Windows it goes to: C:\Users\jacek\AppData\Local\Temp.
That folder does not get cleared on reboot as /tmp/ on Linux.
You have to clear the ~*.png~ files manually.

** Linting

#+begin_example
(ql:quickload :sblint)
(sblint/run-lint:run-lint-asd "~/Programming/Lisp/clos-sweeper/clos-sweeper.asd" )
#+end_example

** Not implemented

*** Menu
Only theme switching, starting game at different sizes and quit and about dialog
work.

*** Icons
No icons yet, the state of the game is indicated by colour of the tiles.

** Compiling sbcl on Windows
https://gist.github.com/bigos/e6d12a55104f16e88c8c859e9643af67

*** roswell
https://github.com/roswell/roswell/wiki/Installation#windows
#+begin_example
pacman -S mingw-w64-x86_64-roswell
ros list installed
#+end_example

https://github.com/roswell/roswell/wiki

https://github.com/roswell/roswell/wiki/How-to-setup-a-lisp-dev-environment-on-windows-with-Roswell

*** generating executable

I was able to generate a windows executable by running the follwing.
#+begin_example
sbcl --load build-windows-executable.lisp
#+end_example

It creates an executeble that after copying to
#+begin_example
C:\msys64\mingw64\bin
#+end_example

starts up and fails on an environment issue

#+begin_example
PS C:\msys64\mingw64\bin> .\win-clos-sweeper.exe

oo (process:9880): CRITICAL **: 22:03:43.954: g_irepository_find_by_name: assertion 'typelib != NULL' failed
WARNING: No such FFI name Application

debugger invoked on a SB-PCL::NO-APPLICABLE-METHOD-ERROR in thread
#<THREAD "main thread" RUNNING {10022B0003}>:
  There is no applicable method for the generic function
    #<STANDARD-GENERIC-FUNCTION GIR::NSGET (6)>
  when called with arguments
    (NIL GTK4::NEW).
#+end_example

I have previous work here:
https://github.com/bigos/execnik

*** other work that may provide the solution
https://github.com/bigos/execnik/blob/master/distribution-on-windows.lisp

building linux executable gives similar error
#+begin_example
$ ./win-clos-sweeper

oo (process:34879): CRITICAL **: 23:23:15.845: g_irepository_find_by_name: assertion 'typelib != NULL' failed
WARNING: No such FFI name Application

debugger invoked on a SB-PCL::NO-APPLICABLE-METHOD-ERROR in thread
#<THREAD tid=34879 "main thread" RUNNING {10024D0003}>:
  There is no applicable method for the generic function
    #<STANDARD-GENERIC-FUNCTION GIR::NSGET (6)>
  when called with arguments
    (NIL GTK4::NEW).
#+end_example

Could that be the answer?
https://github.com/andy128k/cl-gobject-introspection/issues/78

https://github.com/andy128k/cl-gobject-introspection/issues/78#issuecomment-578318078

https://github.com/andy128k/cl-gobject-introspection/issues/78#issuecomment-582092349
